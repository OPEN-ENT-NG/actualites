package net.atos.entng.actualites.test.integration

import io.gatling.core.Predef._
import io.gatling.http.Predef._

import org.entcore.test.appregistry.Role

object ActualitesScenario {

	val scn =
    Role.createAndSetRole("Actualites")
    /*.exec(session => {
        session.setAttribute("actualitesInfoStateDraft", 1)
          .setAttribute("actualitesInfoStatePending", 2)
          .setAttribute("actualitesInfoStatePublished", 3)
          .setAttribute("actualitesInfoStateTrash", 0)})*/
    .exec(http("Login teacher")
      .post("""/auth/login""")
      .formParam("""email""", """${teacherLogin}""")
      .formParam("""password""", """blipblop""")
      .check(status.is(302)))
  // Threads
  .exec(http("Thread Create")
    .post("/actualites/thread")
    .body(StringBody("""{"title" : "thread created"}"""))
    .check(status.is(200),
        jsonPath("$._id").find.saveAs("threadId")
      ))
  .exec(http("Thread Get")
    .get("/actualites/thread/${threadId}")
    .check(status.is(200),
        jsonPath("$._id").find.is("${threadId}"),
        jsonPath("$.title").find.is("thread created")
      ))
  .exec(http("Thread Update")
    .put("/actualites/thread/${threadId}")
    .body(StringBody("""{"title" : "thread updated"}"""))
    .check(status.is(200)))
  .exec(http("Thread Get updated")
    .get("/actualites/thread/${threadId}")
    .check(status.is(200),
        jsonPath("$.title").find.is("thread updated")
      ))
  .exec(http("Thread List")
    .get("/actualites/threads")
    .check(status.is(200),
        jsonPath("$[0]._id").find.is("${threadId}")
      ))

  // Infos
  .exec(http("Info Create")
    .post("/actualites/thread/${threadId}/info")
    .body(StringBody("""{"title" : "info created", "content": "info content created", "status": 42}""")) // status to check it is ignored
    .check(status.is(200),
        jsonPath("$._id").find.saveAs("infoId")
      ))
  .exec(http("Info Get")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$._id").find.is("${infoId}"),
        jsonPath("$.title").find.is("info created"),
        jsonPath("$.content").find.is("info content created"),
        jsonPath("$.status").find.is("1")
      ))
  .exec(http("Info Update")
    .put("/actualites/thread/${threadId}/info/${infoId}/draft")
    .body(StringBody("""{"title" : "info updated", "content": "info content updated", "status": 42}""")) // status to check it is ignored
    .check(status.is(200)))
  .exec(http("Info Get updated")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.title").find.is("info updated"),
        jsonPath("$.content").find.is("info content updated"),
        jsonPath("$.status").find.is("1")
      ))
  .exec(http("Thread Info List")
    .get("/actualites/thread/${threadId}/infos")
    .check(status.is(200)
      ))
  .exec(http("Global Info List")
    .get("/actualites/infos")
    .check(status.is(200)
      ))
  .exec(http("Info Submit")
    .put("/actualites/thread/${threadId}/info/${infoId}/submit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Get submitted")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.status").find.is("2")
      ))
  .exec(http("Info Publish")
    .put("/actualites/thread/${threadId}/info/${infoId}/publish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Get published")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.status").find.is("3")
      ))
  .exec(http("Info Unpublish")
    .put("/actualites/thread/${threadId}/info/${infoId}/unpublish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Get after unpublish")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.status").find.is("2")
      ))
  .exec(http("Info Unsubmit")
    .put("/actualites/thread/${threadId}/info/${infoId}/unsubmit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Get after unsubmit")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.status").find.is("1")
      ))
  .exec(http("Logout 1 - teacher")
    .get("""/auth/logout""")
    .check(status.is(302)))

  val scnNoRights =
  // No Share
  exec(http("Login 2 - student")
    .post("""/auth/login""")
    .formParam("""email""", """${studentLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  // can
  .exec(http("Global Info List (nr)")
    .get("/actualites/infos")
    .check(status.is(200)))
  // TODO: Improve Actualites : not visible Infos should not be listed -> list should be empty
  // cant
  .exec(http("Thread Get (nr)")
    .get("/actualites/thread/${threadId}")
    .check(status.is(401)))
  .exec(http("Thread Update (nr)")
    .put("/actualites/thread/${threadId}")
    .body(StringBody("""{"name" : "thread not updated"}"""))
    .check(status.is(401)))
  .exec(http("Thread Info List (nr)")
    .get("/actualites/thread/${threadId}/infos")
    .check(status.is(401)))
  .exec(http("Info Create (nr)")
    .post("/actualites/thread/${threadId}/info")
    .body(StringBody("""{"title" : "info not created", "content": "info not created"}"""))
    .check(status.is(401)))
  .exec(http("Info Get (nr)")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(401)))
  .exec(http("Info Update (nr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/draft")
    .body(StringBody("""{"title" : "info not updated", "content": "info not updated"}"""))
    .check(status.is(401)))
  .exec(http("Delete Info (nr)")
    .delete("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(401)))
  .exec(http("Info Comment (nr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/comment")
    .body(StringBody("""{"comment" : "student comment"}"""))
    .check(status.is(401)))
  .exec(http("Info Submit (nr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/submit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Info Publish (nr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/publish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Info Unpublish (nr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unpublish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Info Unsubmit (nr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unsubmit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Logout 2 - student")
    .get("""/auth/logout""")
    .check(status.is(302)))

  val scnRead =
 // Share Person - Read
  exec(http("Login 3 - teacher")
    .post("""/auth/login""")
    .formParam("""email""", """${teacherLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  .exec(http("Get share json")
    .get("/actualites/share/json/${threadId}")
    .check(status.is(200)))
  .exec(http("Share Read permission with Student as a Person")
    .put("/actualites/share/json/${threadId}")
    .bodyPart(StringBodyPart("userId", "${studentId}"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|listThreadInfos"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|getThread"))
    .check(status.is(200)))
  .exec(http("Logout 3 - teacher")
    .get("""/auth/logout""")
    .check(status.is(302)))
  .exec(http("Login 4 - student")
    .post("""/auth/login""")
    .formParam("""email""", """${studentLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  // can
  .exec(http("Thread Info List (sr)")
    .get("/actualites/thread/${threadId}/infos")
    .check(status.is(200)
      ))
  .exec(http("Global Info List (sr)")
    .get("/actualites/infos")
    .check(status.is(200)
      ))
  .exec(http("Thread Get (sr)")
    .get("/actualites/thread/${threadId}")
    .check(status.is(200),
        jsonPath("$.name").find.is("thread updated")
      ))
  // cant
  .exec(http("Thread Update (sr)")
    .put("/actualites/thread/${threadId}")
    .body(StringBody("""{"name" : "thread not updated"}"""))
    .check(status.is(401)))
  .exec(http("Info Get (sr)") // Only for Contrib - Read can get Infos via Thread list
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(401)))
  .exec(http("Info Create (sr)")
    .post("/actualites/thread/${threadId}/info")
    .body(StringBody("""{"title" : "info not created", "content": "info not created"}"""))
    .check(status.is(401)))
  .exec(http("Info Update (sr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/draft")
    .body(StringBody("""{"title" : "info not updated", "content": "info not updated", "status": 42}"""))
    .check(status.is(401)))
  .exec(http("Delete Info (sr)")
    .delete("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(401)))
  .exec(http("Info Comment (sr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/comment")
    .body(StringBody("""{"comment" : "student comment"}"""))
    .check(status.is(401)))
  .exec(http("Info Submit (sr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/submit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Info Publish (sr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/publish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Info Unpublish (sr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unpublish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Info Unsubmit (sr)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unsubmit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Logout 4 - student")
    .get("""/auth/logout""")
    .check(status.is(302)))

  val scnComment =
  // Share Person - Comment
  exec(http("Login 5 - teacher")
    .post("""/auth/login""")
    .formParam("""email""", """${teacherLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  .exec(http("Share Comment permission with Student as a Person")
    .put("/actualites/share/json/${threadId}")
    .bodyPart(StringBodyPart("userId", "${studentId}"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|comment"))
    .check(status.is(200)))
  .exec(http("Logout 5 - teacher")
    .get("""/auth/logout""")
    .check(status.is(302)))
  .exec(http("Login 6 - student")
    .post("""/auth/login""")
    .formParam("""email""", """${studentLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  // comment
  .exec(http("Info Comment")
    .put("/actualites/thread/${threadId}/info/${infoId}/comment")
    .body(StringBody("""{"comment" : "student comment"}"""))
    .check(status.is(200)))
  .exec(http("Thread Info List (sr)") // Get via List
    .get("/actualites/thread/${threadId}/infos")
    .check(status.is(200)
      ))
  .exec(http("Logout 6 - student")
    .get("""/auth/logout""")
    .check(status.is(302)))

  val scnContrib =
  // Share Person - Contrib
  exec(http("Login 7 - teacher")
    .post("""/auth/login""")
    .formParam("""email""", """${teacherLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  .exec(http("Share Contrib permission with Student as a Person")
    .put("/actualites/share/json/${threadId}")
    .bodyPart(StringBodyPart("userId", "${studentId}"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|unsubmit"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|submit"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|restore"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|createDraft"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|getInfo"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|updateDraft"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|trash"))
    .check(status.is(200)))
  .exec(http("Logout 7 - teacher")
    .get("""/auth/logout""")
    .check(status.is(302)))
  .exec(http("Login 8 - student")
    .post("""/auth/login""")
    .formParam("""email""", """${studentLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  // can
  .exec(http("Info Create (sc)")
    .post("/actualites/thread/${threadId}/info")
    .body(StringBody("""{"title" : "info created shared contrib", "content": "info content created shared contrib"}"""))
    .check(status.is(200),
        jsonPath("$._id").find.saveAs("studentContribInfoId")
      ))
  .exec(http("Info Get (sc)")
    .get("/actualites/thread/${threadId}/info/${studentContribInfoId}")
    .check(status.is(200),
        jsonPath("$._id").find.is("${studentContribInfoId}"),
        jsonPath("$.title").find.is("info created shared contrib"),
        jsonPath("$.content").find.is("info content created shared contrib"),
        jsonPath("$.status").find.is("1")
      ))
  .exec(http("Info Update draft (sc)")
    .put("/actualites/thread/${threadId}/info/${studentContribInfoId}/draft")
    .body(StringBody("""{"title" : "info updated shared contrib", "content": "info content updated shared contrib"}"""))
    .check(status.is(200)))
  .exec(http("Info Get updated")
    .get("/actualites/thread/${threadId}/info/${studentContribInfoId}")
    .check(status.is(200),
        jsonPath("$.title").find.is("info updated shared contrib"),
        jsonPath("$.content").find.is("info content updated shared contrib"),
        jsonPath("$.status").find.is("1")
      ))
  .exec(http("Delete Info mine (sc)")
    .delete("/actualites/thread/${threadId}/info/${studentContribInfoId}")
    .check(status.is(200)))
  // publication
  .exec(http("Info Submit (sc)")
    .put("/actualites/thread/${threadId}/info/${infoId}/submit")
	.body(StringBody("""{"title" : "info updated shared contrib", "owner": {"userId": "${studentId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Get submitted (sc)")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.status").find.is("2")
      ))
  .exec(http("Info Update pending (sc)")
    .put("/actualites/thread/${threadId}/info/${infoId}/pending")
    .body(StringBody("""{"title" : "info not updated shared contrib", "content": "info content not updated shared contrib"}"""))
    .check(status.is(401)))
  .exec(http("Info Publish (sc)")
    .put("/actualites/thread/${threadId}/info/${infoId}/publish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Info Unpublish (sc)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unpublish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(401)))
  .exec(http("Info Unsubmit (sc)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unsubmit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Get after unsubmit (sc)")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.status").find.is("1")
      ))
  // cant
  .exec(http("Thread Update (sc)")
    .put("/actualites/thread/${threadId}")
    .body(StringBody("""{"name" : "thread not updated"}"""))
    .check(status.is(401)))
  .exec(http("Logout 8 - student")
    .get("""/auth/logout""")
    .check(status.is(302)))

  val scnPublish =
  // Share Person - Publish
  exec(http("Login 9 - teacher")
    .post("""/auth/login""")
    .formParam("""email""", """${teacherLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  .exec(http("Share Contrib permission with Student as a Person")
    .put("/actualites/share/json/${threadId}")
    .bodyPart(StringBodyPart("userId", "${studentId}"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|updatePending"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|publish"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|unpublish"))
    .check(status.is(200)))
  .exec(http("Logout 9 - teacher")
    .get("""/auth/logout""")
    .check(status.is(302)))
  .exec(http("Login 10 - student")
    .post("""/auth/login""")
    .formParam("""email""", """${studentLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  // publication
  .exec(http("Info Submit (sp)")
    .put("/actualites/thread/${threadId}/info/${infoId}/submit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Update pending (sp)")
    .put("/actualites/thread/${threadId}/info/${infoId}/pending")
    .body(StringBody("""{"title" : "info updated shared publish", "content": "info content updated shared publish"}"""))
    .check(status.is(200)))
  .exec(http("Info Get updated (sp)")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.title").find.is("info updated shared publish"),
        jsonPath("$.content").find.is("info content updated shared publish"),
        jsonPath("$.status").find.is("2")
      ))
  .exec(http("Info Publish (sp)")
    .put("/actualites/thread/${threadId}/info/${infoId}/publish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Get published (sp)")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.status").find.is("3")
      ))
  .exec(http("Info Update published (sp)")
    .put("/actualites/thread/${threadId}/info/${infoId}/published")
    .body(StringBody("""{"title" : "info not updated shared publish", "content": "info content not updated shared publis"}"""))
    .check(status.is(401)))
  .exec(http("Info Unpublish (sp)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unpublish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Get after unpublish (sp)")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.status").find.is("2")
      ))
  .exec(http("Info Unsubmit (sp)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unsubmit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  // cant
  .exec(http("Thread Update (sp)")
    .put("/actualites/thread/${threadId}")
    .body(StringBody("""{"name" : "thread not updated"}"""))
    .check(status.is(401)))
  .exec(http("Logout 10 - student")
    .get("""/auth/logout""")
    .check(status.is(302)))

  val scnManage =
  // Share Person - Manage
  exec(http("Login 11 - teacher")
    .post("""/auth/login""")
    .formParam("""email""", """${teacherLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  .exec(http("Share Contrib permission with Student as a Person")
    .put("/actualites/share/json/${threadId}")
    .bodyPart(StringBodyPart("userId", "${studentId}"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|shareThreadSubmit"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|delete"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|deleteThread"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|shareThread"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|shareThreadRemove"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|updatePublished"))
    .bodyPart(StringBodyPart("actions", "net-atos-entng-actualites-controllers-ActualitesController|updateThread"))
    .check(status.is(200)))
  .exec(http("Logout 11 - teacher")
    .get("""/auth/logout""")
    .check(status.is(302)))
  .exec(http("Login 12 - student")
    .post("""/auth/login""")
    .formParam("""email""", """${studentLogin}""")
    .formParam("""password""", """blipblop""")
    .check(status.is(302)))
  // publication
  .exec(http("Info Submit (sm)")
    .put("/actualites/thread/${threadId}/info/${infoId}/submit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Publish (sm)")
    .put("/actualites/thread/${threadId}/info/${infoId}/publish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Update published (sm)")
    .put("/actualites/thread/${threadId}/info/${infoId}/published")
    .body(StringBody("""{"title" : "info updated shared manager", "content": "info content updated shared manager"}"""))
    .check(status.is(200)))
  .exec(http("Info Get updated (sm)")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200),
        jsonPath("$.title").find.is("info updated shared manager"),
        jsonPath("$.content").find.is("info content updated shared manager"),
        jsonPath("$.status").find.is("3")
      ))
  .exec(http("Info Unpublish (sm)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unpublish")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  .exec(http("Info Unsubmit (sm)")
    .put("/actualites/thread/${threadId}/info/${infoId}/unsubmit")
	.body(StringBody("""{"title" : "info updated", "owner": {"userId": "${teacherId}"}}"""))
    .check(status.is(200)))
  // Deletes
  .exec(http("Delete Info (sm)")
    .delete("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(200)))
  .exec(http("Get Info deleted (sm)")
    .get("/actualites/thread/${threadId}/info/${infoId}")
    .check(status.is(400))) // TODO: Improve in Actualites to send 404
  .exec(http("Delete Thread (sm)")
    .delete("/actualites/thread/${threadId}")
    .check(status.is(200)))
  .exec(http("Get Thread deleted (sm)")
    .get("/actualites/thread/${threadId}")
    .check(status.is(401))) // sould SharedAndOwner Filter let pass and return 404 ?
  .exec(http("Logout 12 - student")
    .get("""/auth/logout""")
    .check(status.is(302)))
}